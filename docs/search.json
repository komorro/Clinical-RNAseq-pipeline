[
  {
    "objectID": "RNAseq-pipeline.html",
    "href": "RNAseq-pipeline.html",
    "title": "Custom clinical trial RNAseq pipeline",
    "section": "",
    "text": "This is an analysis pipeline of a bulk RNAseq of samples collected from acute lymphoblastic leukemia (ALL) patients’ bone marrow (BM) and peripheral blood (PB) as a part of a undisclosed clinical trial. This analysis is performed on real-life clinical triala data, but as the data and results were not published yet, both count and clinical data were encrypted to some extent. Two of the variables in the encrypted clinical annotation file (Group and Event) were encrypted, as they are corresponding to relevant clinical features analyzed in the unpublished analysis.\n#Setup and data loading\nFirst, load libraries and set seed for the analysis, as some of the methods used in this pipeline rely on random numbers generation.\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(gtsummary) #for clinical tables\nlibrary(DESeq2) #DEG analysis and some functions for data transformation\nlibrary(factoextra) #for PCA visualisations\n#set seed\nset.seed(123)\nNow, let’s load the files relevant to the analysis (clinical annotation for samples, raw count matrix and list of genes annotated by their names).\nclin.data &lt;- read.csv('RNAseq files/clin_data_encrypted.csv') %&gt;% select(!'X')\nraw.counts &lt;- read.csv('RNAseq files/raw_counts_encrypted.csv') %&gt;% select(!'X')\nall.genes.annot &lt;- read.csv('RNAseq files/all_genes_annot_encrypted.csv') %&gt;% select(!'X')"
  },
  {
    "objectID": "RNAseq-pipeline.html#vst-of-counts",
    "href": "RNAseq-pipeline.html#vst-of-counts",
    "title": "Custom clinical trial RNAseq pipeline",
    "section": "VST of counts",
    "text": "VST of counts\nFor the PCA and UMAP analysis (and all other distance-based analyses), the counts need to be normalized (to enable between-samples comparisons) and variance stabilized (to remove mean counts to standard deviation dependence, that causes highly-expressed genes to have more weight attached to them in the downstream analyses). DESeq2 package has a vst function that first performs normalization, using ‘median of ratios’ method, and then does the variance stabilization. More detailed description of the methods used by DESeq2 package can be found in its documentation.\n\nvst.counts &lt;- vst(as.matrix(raw.counts.clean))\n\nThe mean expression and standard deviation dependence before and after VST is shown below on Figure 2.\nggplot(\n  data = data.frame(SD = log2(matrixStats::rowSds(as.matrix(raw.counts.clean))), Means = log2(rowMeans(raw.counts.clean))),\n  aes(x = Means, y=SD)\n    )+\n  geom_point()+\n  geom_smooth()+\n  theme_minimal()+\n  labs(title='Raw counts',\n       x = 'Mean gene count [log2]',\n       y = 'Gene count SD [log2]')\n\nggplot(\n  data = data.frame(SD = log2(matrixStats::rowSds(as.matrix(vst.counts))), Means = log2(rowMeans(vst.counts))),\n  aes(x = Means, y=SD)\n    )+\n  geom_point()+\n  geom_smooth()+\n  theme_minimal()+\n  labs(title='VST counts',\n       x = 'Mean gene count [log2]',\n       y = 'Gene count SD [log2]')\n\n\n\n\n\n\n\n\n\n\n\n(a) Raw counts\n\n\n\n\n\n\n\n\n\n\n\n(b) VST counts\n\n\n\n\n\n\n\nFigure 2: Effects of VST on gene mean count to SD ratio\n\n\n\nAfter VST, the count matrix is ready for further analysis."
  },
  {
    "objectID": "RNAseq-pipeline.html#global-patterns-in-whole-dataset",
    "href": "RNAseq-pipeline.html#global-patterns-in-whole-dataset",
    "title": "Custom clinical trial RNAseq pipeline",
    "section": "Global patterns in whole dataset",
    "text": "Global patterns in whole dataset\nEven though one can use biology domain knowledge to subset the samples accordingly, so the analysis makes biological sense, it might be a good practice to look at the whole dataset to see whether any clinical features drive variance in the dataset.\nTo visualize global patterns in the whole multi-dimensional expression data, PCA was performed first. Then, the UMAP was performed on all PCs that explain more than 1% of variance in the data (sometimes 70-80% of cumulative explained variance threshold for downstream analysis using PCs is used, although it’s more suitable for data where several top PCs explain significant portion of the whole variance present in the data).\nFirst, PCA was performed for the whole dataset. PCA results were centered for better visualization, but not scaled, as VST data shouldn’t be scaled further.\n\ncurrent.pca &lt;- vst.counts %&gt;%\n  t() %&gt;%\n  prcomp(scale=F, center=T)\n\nThen, the scree plot of PCs, that each explain more than 1% of variance, can be plotted.\n\n#get number of top PCs, each explaining more than 1% of variance\nnpcs = sum(summary(current.pca)$importance[2,]&gt;0.01)\n#plot scree plot of top 2 PCs\nfviz_eig(current.pca, \n         addlabels = F,\n         ncp=npcs)+\n  labs(title=paste0('Scree plot, whole dataset'),\n       subtitle=paste(npcs,' top PCs',sep=''))+\n  ylim(0,plyr::round_any(max(summary(current.pca)$importance[2,])*100, 5, f = ceiling))\n\n\n\n\n\n\n\n\nThe top 2 PCs explain approx. 35% of variance present in the dataset which, given the heterogenity of the samples used for the analysis, is a decent value. To see whether there are any clear patterns emerging within just those 2 top PCs, PC1 vs PC2 can be plotted using fviz_pca_ind function from factoextra package.\n\nfviz_pca_ind(current.pca,\n             geom = c('point')\n             )+\n  labs(title = paste0('PCA plot - centered, whole dataset'))\n\n\n\n\n\n\n\n\nClearly, PC1 and PC2 allow for identification of 3 separate clusters in the data. To see whether any particular clinical feature drives this separation, plot can be colored by feature.\n\nfviz_pca_ind(current.pca,\n             geom = c('point'),\n             col.ind = clin.data[,'Relapse'], #color dots by feature from clin.file\n             )+\n  labs(title = paste0('PCA plot - centered, whole dataset'))"
  },
  {
    "objectID": "RNAseq-pipeline.html#b-all---prognostic-marker-for-event-in-diagnostic-bone-marrow-samples",
    "href": "RNAseq-pipeline.html#b-all---prognostic-marker-for-event-in-diagnostic-bone-marrow-samples",
    "title": "Custom clinical trial RNAseq pipeline",
    "section": "B-ALL - prognostic marker for Event in diagnostic bone marrow samples",
    "text": "B-ALL - prognostic marker for Event in diagnostic bone marrow samples\nFor this analysis, only diagnostic bone marrow B-ALL samples were selected, as analysis of B and T cell ALL together makes no biological sense, as the different lineage"
  }
]